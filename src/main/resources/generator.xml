<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE generatorConfiguration PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd" >
<generatorConfiguration>

    <!-- 配置文件 -->
    <properties resource="generator.properties"></properties>

    <!-- 驱动包 -->
    <!--<classPathEntry location="${classPathEntry}"/>-->

    <context id="MysqlContext" targetRuntime="MyBatis3" defaultModelType="flat">

        <property name="javaFileEncoding" value="UTF-8"/>
        <!-- 由于beginningDelimiter和endingDelimiter的默认值为双引号(")，在Mysql中不能这么写，所以还要将这两个默认值改为`  -->
        <property name="beginningDelimiter" value="`"/>
        <property name="endingDelimiter" value="`"/>

        <property name="useActualColumnNames" value="false"/>

        <property name="autoDelimitKeywords" value="false" />
        <property name="javaFormatter"
                  value="org.mybatis.generator.api.dom.DefaultJavaFormatter" />
        <property name="xmlFormatter"
                  value="org.mybatis.generator.api.dom.DefaultXmlFormatter" />

        <!-- 为生成的Java模型创建一个toString方法 -->
        <plugin type="org.mybatis.generator.plugins.ToStringPlugin"></plugin>

        <!-- 为生成的Java模型类添加序列化接口，并生成serialVersionUID字段 -->
        <plugin type="org.mybatis.generator.plugins.SerializablePlugin"></plugin>

        <!-- 生成一个新的selectByExample方法，这个方法可以接收offset和limit参数，主要用来实现分页 -->
        <plugin type="com.bon.plugins.PaginationPlugin"></plugin>

        <!-- Java模型生成equals和hashcode方法 -->
        <plugin type="org.mybatis.generator.plugins.EqualsHashCodePlugin"></plugin>

        <!-- 生成的代码去掉注释 -->
        <commentGenerator type="com.bon.plugins.CommentGenerator">
            <property name="suppressAllComments" value="true"/>
        </commentGenerator>

        <!-- 数据库连接 -->
        <jdbcConnection driverClass="${generator.jdbc.driver}"
                        connectionURL="${generator.jdbc.url}"
                        userId="${generator.jdbc.username}"
                        password="${generator.jdbc.password}"/>

        <javaTypeResolver type="org.mybatis.generator.internal.types.JavaTypeResolverDefaultImpl">
            <property name="forceBigDecimals" value="false" />
        </javaTypeResolver>

        <!-- model生成 -->
        <javaModelGenerator targetPackage="com.bon.model" targetProject="src/main/java">
            <property name="constructorBased" value="true" />
            <property name="enableSubPackages" value="true" />
            <property name="immutable" value="false" />
            <property name="trimStrings" value="true" />
        </javaModelGenerator>


        <!-- Mapper接口生成 -->
        <sqlMapGenerator targetPackage="com.bon.mapper" targetProject="src/main/resources">
            <property name="enableSubPackages" value="true" />
        </sqlMapGenerator>

        <!-- MapperXML生成 -->
        <javaClientGenerator targetPackage="com.bon.dao"
                             type="XMLMAPPER" targetProject="src/main/java">
            <property name="enableSubPackages" value="true" />
            <!-- <property name="rootInterface" value="com.wp.xxpay.mapper.BaseMapper" /> -->
        </javaClientGenerator>

        <!-- 需要映射的表 -->
        <table tableName="pay_setting" domainObjectName="PaySetting"
               enableCountByExample="false" enableSelectByExample="false"
               enableDeleteByExample="false" enableUpdateByExample="false"
               selectByExampleQueryId="false"
               schema="general" >
            <property name="useActualColumnNames" value="false" />
        </table>
        <!--<table tableName="pay_setting" domainObjectName="PaySetting">-->
            <!--<property name="useActualColumnNames" value="false"/>-->
        <!--</table>-->
    </context>
</generatorConfiguration>